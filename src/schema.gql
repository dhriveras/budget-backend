# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  _count: CategoryCount!
  createdAt: DateTime!
  createdBy: String!
  description: String
  expenses: [Expense!]
  id: ID!
  name: String!
  updatedAt: DateTime!
  user: User!
}

type CategoryCount {
  expenses: Int!
}

input CreateCategoryInput {
  description: String
  name: String!
}

input CreateExpenseInput {
  amount: Float!
  categoryId: String
  date: DateTime!
  description: String
  name: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Expense {
  amount: Float!
  category: Category
  categoryId: String
  createdAt: DateTime!
  createdBy: String!
  date: DateTime!
  description: String
  id: ID!
  name: String!
  updatedAt: DateTime!
  user: User!
}

input ExpenseFilterInput {
  categoryId: String
  dateFrom: DateTime
  dateTo: DateTime
  maxAmount: Float
  minAmount: Float
}

type Mutation {
  createCategory(data: CreateCategoryInput!): Category!
  createExpense(data: CreateExpenseInput!): Expense!
  deleteExpense(id: String!): Expense!
  login(email: String!, password: String!): Token!
  logout: Boolean!
  refreshToken(refreshToken: String!): Token!
  removeCategory(id: String!): Category!
  removeUser(id: String!): User!
  singup(createUserInput: CreateUserInput!): User!
  updateCategory(data: UpdateCategoryInput!, id: String!): Category!
  updateExpense(data: UpdateExpenseInput!, id: String!): Expense!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
}

type Query {
  categories: [Category!]!
  category(id: String!): Category!
  expense(id: String!): Expense!
  expenses(filter: ExpenseFilterInput): [Expense!]!
  me: User!
  user(id: String!): User!
  users: [User!]!
}

type Token {
  accessToken: String!
  refreshToken: String!
}

input UpdateCategoryInput {
  description: String
  name: String
}

input UpdateExpenseInput {
  amount: Float
  categoryId: String
  date: DateTime
  description: String
  name: String
}

input UpdateUserInput {
  email: String
  name: String
}

type User {
  _count: UserCount!
  categories: [Category!]
  createdAt: DateTime!
  email: String!
  expenses: [Expense!]
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type UserCount {
  categories: Int!
  expenses: Int!
}